#!/usr/bin/env bash

# This script assumes that all the right environment variables
# (CC, LD, STRIP, ...) areset.

set -eu -o pipefail

scriptdir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
cd $scriptdir/..

export GYP_DEFINES="OS=android clang=1"

function myconf() {
  ./configure \
      --ninja \
      --cross-compiling \
      --dest-cpu=$DEST_CPU_ARCH \
      --dest-os=android \
      --without-intl \
      --openssl-no-asm \
      --without-bundled-v8 \
      --experimental-enable-pointer-compression \
      --shared \
      --shared-zlib
}

myconf
#下面的ninja命令只是用来编译出o文件，最终链接so的时候会失败（找不到lz之类的）,原因不明
ninja -d keeprsp -C out/Release/ libnode || true
find out/Release -name "*.a" -exec rm {} \; &&
sed -i 's/rcsT/rcs/' out/Release/build.ninja
ninja -d keeprsp -C out/Release/ libnode || true
cd out/Release &&
$AR rcs -o libnode.a  $(grep -oz 'obj\/\S*\.o\s' lib/libnode.so.rsp) 
cd ../..
#之后需要把所有的.a文件在mac下解压出所有的.o文件，然后用mac的ar重新压成一个a文件（可以把所有o文件都放到一起），然后放到mgc中进行编译即可
